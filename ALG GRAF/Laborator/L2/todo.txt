
//perm
#include <iostream>
using namespace std;

int p[100];

void afisare(int p[], int n) {
    for(int i = 1; i <= n; i++)
        //printf("%d \n",p[i]);
        cout << p[i] << ' ';
    cout << endl;
    return;
}

void permutari(int n) {
    int i, j, k;
    for(i = 1; i <= n; i++)
        p[i] = i;
    afisare(p,n);
    do {
        k = n - 1;
        while(p[k] >= p[k+1] && k > 0) k--;
        if(k > 0) {
            j = n;
            while(p[j] <= p[k]) j--;
            swap(p[k],p[j]);
            for(i = 1; i <= (n-k)/2; i++)
                swap(p[k+i],p[n-i+1]);
            afisare(p,n);
        }
    }while(k > 0);
    return;
}


int main() {
    int n;
    cin >> n;
    permutari(n);
    return 0;
}

//comb

#include <iostream>
using namespace std;

int c[100];

void afisare(int c[], int n) {
    for(int i = 1; i <= n; i++)
        //printf("%d \n",p[i]);
        cout << c[i] << ' ';
    cout << endl;
    return;
}

void combinari(int m,int n) {
    int i, j, k;
    for(i = 1; i <= n; i++)
        c[i] = i;
    afisare(c,n);
    do {
        k = n;
        while(c[k] == m-n+k && k > 0) k--;
        if(k > 0) {
            c[k] = c[k] + 1;
            for(i = k+1; i <= n; i++)
                c[i] = c[i-1] + 1;
            afisare(c,n);
        }
    }while(k > 0);
    return;
}
int main() {
    int m, n;
    cin >> m >> n;
    combinari(m,n);
    return 0;
}

// aranj
#include <iostream>
using namespace std;

int c[100], p[100];

void afisare(int c[], int p[], int n) {
    for(int i = 1; i <= n; i++)
        //printf("%d \n",p[i]);
        cout << c[p[i]] << ' ';
    cout << endl;
    return;
}

void permutari(int n) {
    int i, j, k;
    for(i = 1; i <= n; i++)
        p[i] = i;
   afisare(c,p,n);
    do {
        k = n - 1;
        while(p[k] >= p[k+1] && k > 0) k--;
        if(k > 0) {
            j = n;
            while(p[j] <= p[k]) j--;
            swap(p[k],p[j]);
            for(i = 1; i <= (n-k)/2; i++)
                swap(p[k+i],p[n-i+1]);
            afisare(c,p,n);
        }
    }while(k > 0);
    return;
}

void aranjamente(int m,int n) {
    int i, j, k;
    for(i = 1; i <= n; i++)
        c[i] = i;
    permutari(n);
    do {
        k = n;
        while(c[k] == m-n+k && k > 0) k--;
        if(k > 0) {
            c[k] = c[k] + 1;
            for(i = k+1; i <= n; i++)
                c[i] = c[i-1] + 1;
            permutari(n);
        }
    }while(k > 0);
    return;
}

int main() {
    int m, n;
    cin >> m >> n;
    aranjamente(m,n);
    return 0;
}


//perm oarec,nujs bun

#include <iostream>
using namespace std;

int p[100];

void afisare(int p[], int n) {
    for(int i = 1; i <= n; i++)
        //printf("%d \n",p[i]);
        cout << p[i] << ' ';
    cout << endl;
    return;
}

void permutari(int n) {
    int i, j, k;
    for(i = 1; i <= n; i++)
       cin>>p[i];
    afisare(p,n);
    do {
        k = n - 1;
        while(p[k] >= p[k+1] && k > 0) k--;
        if(k > 0) {
            j = n;
            while(p[j] <= p[k]) j--;
            swap(p[k],p[j]);
            for(i = 1; i <= (n-k)/2; i++)
                swap(p[k+i],p[n-i+1]);
            afisare(p,n);
        }
    }while(k > 0);
    return;
}


int main() {
    int n;
    cin >> n;
    permutari(n);
    return 0;
}

//
comb oarec

#include <iostream>
using namespace std;

int c[100];

void afisare(int c[], int n) {
    for(int i = 1; i <= n; i++)
        //printf("%d \n",p[i]);
        cout << c[i] << ' ';
    cout << endl;
    return;
}

void combinari(int m,int n) {
    int i, j, k;
    for(i = 1; i <= n; i++)
        cin>>c[i];
    afisare(c,n);
    do {
        k = n;
        while(c[k] == m-n+k && k > 0) k--;
        if(k > 0) {
            c[k] = c[k] + 1;
            for(i = k+1; i <= n; i++)
                c[i] = c[i-1] + 1;
            afisare(c,n);
        }
    }while(k > 0);
    return;
}
int main() {
    int m, n;
    cin >> m >> n;
    combinari(m,n);
    return 0;
}


//

aranj aoarec

#include <iostream>
using namespace std;

int c[100], p[100];

void afisare(int c[], int p[], int n) {
    for(int i = 1; i <= n; i++)
        //printf("%d \n",p[i]);
        cout << c[p[i]] << ' ';
    cout << endl;
    return;
}

void permutari(int n) {
    int i, j, k;
    for(i = 1; i <= n; i++)
        p[i] = c[i];
   afisare(c,p,n);
    do {
        k = n - 1;
        while(p[k] >= p[k+1] && k > 0) k--;
        if(k > 0) {
            j = n;
            while(p[j] <= p[k]) j--;
            swap(p[k],p[j]);
            for(i = 1; i <= (n-k)/2; i++)
                swap(p[k+i],p[n-i+1]);
            afisare(c,p,n);
        }
    }while(k > 0);
    return;
}

void aranjamente(int m,int n) {
    int i, j, k;
    for(i = 1; i <= n; i++)
        cin>>c[i];
    permutari(n);
    do {
        k = n;
        while(c[k] == m-n+k && k > 0) k--;
        if(k > 0) {
            c[k] = c[k] + 1;
            for(i = k+1; i <= n; i++)
                c[i] = c[i-1] + 1;
            permutari(n);
        }
    }while(k > 0);
    return;
}

int main() {
    int m, n;
    cin >> m >> n;
    aranjamente(m,n);
    return 0;
}

